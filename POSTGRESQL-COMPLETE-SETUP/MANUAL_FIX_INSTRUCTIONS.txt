===============================================================
  MANUAL FIX FOR DATABASE.JS CORRUPTION
===============================================================

The database.js file has corrupted characters (^) from batch files.

QUICK FIX:

1. Open Notepad as Administrator

2. Open this file:
   C:\CBA_Portal\cantonment-web\backend\config\database.js

3. Use Find & Replace (Ctrl+H):
   - Find: ^
   - Replace: (leave empty)
   - Click "Replace All"

4. Save the file (Ctrl+S)

5. Test syntax in Command Prompt:
   cd C:\CBA_Portal\cantonment-web\backend
   node -c config/database.js

6. If no errors, try starting server:
   C:\CBA_Portal\POSTGRESQL-COMPLETE-SETUP\start-cba-portal-postgresql.bat

===============================================================

ALTERNATIVE - REPLACE ENTIRE FILE:

If the above doesn't work, replace the entire database.js content:

1. Delete: C:\CBA_Portal\cantonment-web\backend\config\database.js

2. Create new file with this content:

const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, '../database.sqlite');

class Database {
  constructor() {
    this.db = new sqlite3.Database(dbPath, (err) => {
      if (err) {
        console.error('Error opening database:', err);
      } else {
        console.log('Connected to SQLite database');
        this.db.run('PRAGMA foreign_keys = ON', (err) => {
          if (err) {
            console.error('Error enabling foreign keys:', err);
          } else {
            console.log('Foreign keys enabled');
          }
        });
        this.initDatabase();
      }
    });
  }

  async query(sql, params = []) {
    return new Promise((resolve, reject) => {
      this.db.all(sql, params, (err, rows) => {
        if (err) reject(err);
        else resolve(rows);
      });
    });
  }

  async run(sql, params = []) {
    return new Promise((resolve, reject) => {
      this.db.run(sql, params, function(err) {
        if (err) reject(err);
        else resolve({ id: this.lastID, changes: this.changes });
      });
    });
  }

  async close() {
    return new Promise((resolve, reject) => {
      this.db.close((err) => {
        if (err) reject(err);
        else resolve();
      });
    });
  }
}

const database = new Database();
module.exports = database;

3. Save as "database.js" in C:\CBA_Portal\cantonment-web\backend\config\

===============================================================